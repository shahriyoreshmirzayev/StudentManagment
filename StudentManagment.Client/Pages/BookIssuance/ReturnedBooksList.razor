@page "/returnbookissuance-list"
@using StudentManagment.Shared.Models
@using StudentManagment.Shared.StudentRepository
@using StudentManagment.Client.Services
@inject NavigationManager navigation;
@inject IParentRepository ParentService
@inject IBookIssuanceRepository BookIssuanceService;
@inject IBookRepository BookService;
@inject IJSRuntime JsRuntime


<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">Returned Books HIstory</h3>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-12">
                        <div class="card">
                            <div class="card-header"></div>
                            @if (!AllBookReturnIssunace.Any())
                            {
                                <p><em>Loading Books Return Issuance History...</em></p>
                            }
                            @if (AllBookReturnIssunace.Any())
                            {
                                <div class="card-body">
                                    <table class="table table-striped table-hover">
                                        <thead>
                                            <tr>
                                                <th>Issue Date</th>
                                                <th>Due Date</th>
                                                <th>Student Name</th>
                                                <th>Book Name</th>
                                                <th>Return Date</th>
                                                <th>Status</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var issue in AllBookReturnIssunace)
                                            {
                                                <tr>
                                                    <td>@issue.IssueDate</td>
                                                    <td>@issue.DueDate</td>
                                                    <td>@issue.Student?.FullName</td>
                                                    <td>@issue.Book?.Name</td>
                                                    <td>@issue.ReturnDate</td>
                                                    <td class="text-warning">@issue.Status.Code</td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            }
                            else
                            {
                                <div class="alert alert-info"> There is not Books Return Issuance History List Availlable</div>
                            }
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
</div>

@code {

    public List<BookIssuance> AllBookReturnIssunace { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        await LoadAllBooksIssuance();
    }

    public async Task LoadAllBooksIssuance()
    {
        var data = await BookIssuanceService.GetAllAsync();
        var returndate = data.Where(x => x.Status.Code != "Returned");
        AllBookReturnIssunace.Clear();
        if (returndate is null) return;
        foreach (var item in returndate)
        {
            AllBookReturnIssunace.Add(item);
        }
    }
    private void EditBookIssuance(int id)
    {
        navigation.NavigateTo($"/bookissuance/edit/{id}");
    }

    private async Task DeleteBookIssuance(int Id)
    {
        var result = await BookIssuanceService.DeleteAsync(Id);
        await LoadAllBooksIssuance();
    }
}
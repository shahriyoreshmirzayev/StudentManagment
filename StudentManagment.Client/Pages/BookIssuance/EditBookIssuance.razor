@page "/bookissuance/edit/{id:int}"
@using StudentManagment.Client.Services;
@using StudentManagment.Shared.Models;
@using StudentManagment.Shared.StudentRepository;
@inject IParentRepository ParentService;
@inject IStudentRepository StudentService;
@inject ISystemCodeDetailRepository SystemCodeDetailService;
@inject IBookIssuanceRepository BookIssuanceService;
@inject IBookRepository BookService;
@inject IJSRuntime JsRuntime;
@inject NavigationManager navigation;

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">Update Parent Details</h3>
            </div>
            <div class="card-body">
                <div class="col-md-12">
                    <EditForm Model="bookIssuance" OnValidSubmit="UpdateBookIsssuance" FormName="updatebookissuance">
                        <DataAnnotationsValidator />
                        <ValidationSummary />
                        <div class="col-md-12">
                            <div class="col-md-12">
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label class="control-label">Issue Data</label>
                                            <InputDate for="IssueData" class="form-control" @bind-Value="@bookIssuance.IssueDate" />
                                            <ValidationMessage For="()=>bookIssuance.IssueDate" />
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label class="control-label">Due Date</label>
                                            <InputDate for="DueDate" class="form-control" @bind-Value="@bookIssuance.DueDate" />
                                            <ValidationMessage For="()=>bookIssuance.DueDate" />
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label class="control-label">Class</label>
                                            <InputSelect for="ClassId" class="form-control" @bind-Value="@bookIssuance.ClassId">
                                                <option value="">Select Class</option>
                                                @if (Class != null && Class.Any())
                                                {
                                                    @foreach (var item in Class)
                                                    {
                                                        <option value="@item.Id">@item.Description</option>
                                                    }
                                                }
                                            </InputSelect>
                                            <ValidationMessage For="()=>bookIssuance.ClassId" />
                                        </div>
                                    </div>

                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label class="control-label">Student</label>
                                            <InputSelect for="StudentId" class="form-control" @bind-Value="@bookIssuance.StudentId">
                                                <option value="">Select Student</option>
                                                @foreach (var student in Students)
                                                {
                                                    <option value="@student.Id">@student.FullName</option>
                                                }
                                            </InputSelect>
                                            <ValidationMessage For="()=>bookIssuance.StudentId" />
                                        </div>
                                    </div>

                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label class="control-label">Book Type</label>
                                            <InputSelect for="BookId" class="form-control" @bind-Value="@bookIssuance.BookId">
                                                <option value="">Student Book Type</option>
                                                @foreach (var type in Books)
                                                {
                                                    <option value="@type.Id">@type.Name</option>
                                                }
                                            </InputSelect>
                                            <ValidationMessage For="()=>bookIssuance.BookId" />
                                        </div>
                                    </div>

                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label class="control-label">Notes</label>
                                            <InputTextArea for="DOB" class="form-control" @bind-Value="@bookIssuance.Notes" />
                                            <ValidationMessage For="()=>bookIssuance.Notes" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
</div>
@code {

    [SupplyParameterFromForm]
    public BookIssuance bookIssuance { get; set; } = new();


    [Parameter]
    public int id { get; set; }

    List<SystemCodeDetail> Class = new List<SystemCodeDetail>();

    List<Book> Books = new List<Book>();

    List<Student> Students = new List<Student>();

    protected override async Task OnInitializedAsync()
    {
        bookIssuance = await BookIssuanceService.GetByIdAsync(id);
        Class = await SystemCodeDetailService.GetByCodeAsync("Class");
        Books = await BookService.GetAllAsync();
        Students = await StudentService.GetAllStudentsAsync();
    }

    protected async Task UpdateBookIsssuance()
    {
        var result = await BookIssuanceService.UpdateAsync(bookIssuance);
        navigation.NavigateTo("/bookissuance-list");
    }
    public void Cancel()
    {
        navigation.NavigateTo("/bookissuance-list");
    }
}
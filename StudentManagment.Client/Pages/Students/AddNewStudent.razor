@page "/add-student"
@using StudentManagment.Client.Services;
@using StudentManagment.Shared.Models;
@using StudentManagment.Shared.StudentRepository
@inject NavigationManager navigation;
@inject IJSRuntime jSRuntime;
@inject IStudentRepository StudentService;
@inject ICountryRepository CountryService;
<h3>Add New Student</h3>

<hr />
<div class="row">
    <div class="col-md-12">
        <EditForm Model="studobj" OnValidSubmit="CreateStudent" FormName="addstudent">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="col-md-12">

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="control-label">First Name</label>
                            <InputText for="FirstName" class="form-control" @bind-Value="studobj.FirstName" />
                            <ValidationMessage For="() => studobj.FirstName" />
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="control-label">Middle Name</label>
                            <InputText for="MiddleName" class="form-control" @bind-Value="studobj.MiddleName" />
                            <ValidationMessage For="() => studobj.MiddleName" />
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="control-label">Last Name</label>
                            <InputText for="LastName" class="form-control" @bind-Value="studobj.LastName" />
                            <ValidationMessage For="() => studobj.LastName" />
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="control-label">Enail Address</label>
                            <InputText for="EmailAddress" class="form-control" @bind-Value="studobj.EmailAddress" />
                            <ValidationMessage For="() => studobj.EmailAddress" />
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="control-label">Student Address</label>
                            <InputText for="Address" class="form-control" @bind-Value="studobj.Address" />
                            <ValidationMessage For="() => studobj.Address" />
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="control-label">Phone Number</label>
                            <InputText for="PhoneNumber" class="form-control" @bind-Value="studobj.PhoneNumber" />
                            <ValidationMessage For="() => studobj.PhoneNumber" />
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="control-label">Country</label>
                            <InputSelect for="Country" class="form-control" @bind-Value="studobj.Country">
                                <option value="">Select Country</option>
                                @foreach(var country in Countries)
                                {
                                    <option value="@country.Name">@country.Name</option>
                                }
                            </InputSelect>
                            <ValidationMessage For="() => studobj.Country" />
                        </div>
                    </div>
                </div>

                <div class="form-group mt-4">
                    <button type="submit" class="btn btn-primary">Save Student</button>
                    <button type="button" @onclick="()=>Cancel()" class="btn btn-danger">Back To List</button>
                </div>
            </div>
        </EditForm>
    </div>
</div>

@code {
    [SupplyParameterFromForm]
    public Student studobj { get; set; } = new();
    public List<Country> Countries { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        Countries = await CountryService.GetAllAsync();
    }
    protected async Task CreateStudent()
    {
        var result = await StudentService.AddStudentAsync(studobj);
        Countries = await CountryService.GetAllAsync();
        navigation.NavigateTo("/students-list");
    }
    public void Cancel()
    {
        navigation.NavigateTo("/students-list");
    }
}
